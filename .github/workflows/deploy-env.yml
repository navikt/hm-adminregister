name: Manuell deploy til NAIS (ENV)

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Deploy to environment
        options:
          - dev
          - prod

run-name: Bygg og deploy til ${{ inputs.environment }}

env:
  BUILD_ENV: ${{ inputs.environment == 'prod' && 'production' || inputs.environment }}
  CLUSTER: ${{ inputs.environment == 'prod' && 'prod-gcp' || 'dev-gcp' }}
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}

jobs:
  test:
    name: run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: "16.x"

      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Run tests
        run: npm test

  build:
    needs: [test]
    name: Build and push docker container
    permissions:
      contents: 'read'
      packages: 'write'
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-build.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and publish Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}
          build-args: |
            BUILD_ENV=${{ env.BUILD_ENV }}
            CLUSTER=${{ env.CLUSTER }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            "NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}"


  deploy:
    name: Deploy ${{ inputs.environment }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: ${{ env.CLUSTER }}
          RESOURCE: .nais/nais.yaml
          VAR: image=${{ env.IMAGE }}
          VARS: .nais/nais-${{ inputs.environment }}.json
